<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>stack on gpsk-Tech Blog</title>
    <link>https://hyenakim.github.io/tags/stack/</link>
    <description>Recent content in stack on gpsk-Tech Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 21 Mar 2019 22:03:29 +0900</lastBuildDate>
    
	<atom:link href="https://hyenakim.github.io/tags/stack/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>스택(Stack),큐(Queue),데크(Deque)</title>
      <link>https://hyenakim.github.io/2019/03/%EC%8A%A4%ED%83%9Dstack%ED%81%90queue%EB%8D%B0%ED%81%ACdeque/</link>
      <pubDate>Thu, 21 Mar 2019 22:03:29 +0900</pubDate>
      
      <guid>https://hyenakim.github.io/2019/03/%EC%8A%A4%ED%83%9Dstack%ED%81%90queue%EB%8D%B0%ED%81%ACdeque/</guid>
      <description>&lt;h1 id=&#34;스택&#34;&gt;* 스택&lt;/h1&gt;

&lt;p&gt;나중에 들어온게 먼저 나가는 &lt;strong&gt;LIFO&lt;/strong&gt;형태의 자료구조&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;LIFO : Last in First out&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&#34;java-라이브러리-스택관련-메서드&#34;&gt;java 라이브러리 스택관련 메서드&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;Stack&amp;lt;Integer&amp;gt; stack = new Stack&amp;lt;Integer&amp;gt;();
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;push(E item)

&lt;ul&gt;
&lt;li&gt;해당 아이템을 스택의 top에 쌓는다.&lt;/li&gt;
&lt;li&gt;쌓았으면 true, 못쌓았으면 false를 반환한다.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;pop()

&lt;ul&gt;
&lt;li&gt;스택의 맨 위를 삭제하고 반환한다.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;peek()

&lt;ul&gt;
&lt;li&gt;스택의 맨위를 삭제하지 않고 반환한다.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;empty()

&lt;ul&gt;
&lt;li&gt;스택이 비어있으면 true, 아니면 false를 반환한다.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;search(Object o)

&lt;ul&gt;
&lt;li&gt;해당 Object의 위치를 반환한다. top이면 1, 없으면 -1&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;큐&#34;&gt;* 큐&lt;/h1&gt;

&lt;p&gt;먼저 들어온게 먼저 나가는 &lt;strong&gt;FIFO&lt;/strong&gt;형태의 자료구조&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;FIFO : First in First out&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&#34;java-라이브러리-큐관련-메서드&#34;&gt;java 라이브러리 큐관련 메서드&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;Queue&amp;lt;Integer&amp;gt; q = new LinkedList&amp;lt;Integer&amp;gt;();
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;offer(E item)

&lt;ul&gt;
&lt;li&gt;해당 아이템을 큐에 넣는다.&lt;/li&gt;
&lt;li&gt;넣었으면 true, 못넣었으면 false반환한다.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;poll()

&lt;ul&gt;
&lt;li&gt;큐의 맨 앞을 삭제하고 반환한다.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;peek()

&lt;ul&gt;
&lt;li&gt;큐의 맨앞을 삭제하지 않고 반환한다.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;isEmpty()

&lt;ul&gt;
&lt;li&gt;큐가 비어있으면 true, 아니면 false를 반환한다.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;덱&#34;&gt;* 덱&lt;/h1&gt;

&lt;p&gt;양쪽에서 삽입 삭제가 가능한 형태의 자료구조&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;사용에따라 스택, 큐가 될 수 있다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&#34;java-라이브러리-덱관련-메서드&#34;&gt;java 라이브러리 덱관련 메서드&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;Deque&amp;lt;Integer&amp;gt; deque = new ArrayDeque&amp;lt;Integer&amp;gt;();
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;add(E item)

&lt;ul&gt;
&lt;li&gt;해당 아이템을 덱에 넣는다.&lt;/li&gt;
&lt;li&gt;addFirst(E item)

&lt;ul&gt;
&lt;li&gt;덱의 맨 앞에 넣는다.&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;addLast(E item)

&lt;ul&gt;
&lt;li&gt;덱의 맨 뒤에 넣는다.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;poll()

&lt;ul&gt;
&lt;li&gt;덱의 맨 앞을 삭제하고 반환한다.&lt;/li&gt;
&lt;li&gt;pollFirst()

&lt;ul&gt;
&lt;li&gt;덱의 맨 앞을 삭제하고 반환한다.&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;pollLast()

&lt;ul&gt;
&lt;li&gt;덱의 맨 뒤를 삭제하고 반환한다.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;peek()

&lt;ul&gt;
&lt;li&gt;덱의 맨앞을 삭제하지 않고 반환한다.&lt;/li&gt;
&lt;li&gt;peekFirst()

&lt;ul&gt;
&lt;li&gt;덱의 맨앞을 삭제하지 않고 반환한다.&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;peekLast()

&lt;ul&gt;
&lt;li&gt;덱의 맨뒤를 삭제하지 않고 반환한다.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;isEmpty()

&lt;ul&gt;
&lt;li&gt;덱이 비어있으면 true, 아니면 false를 반환한다.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
  </channel>
</rss>